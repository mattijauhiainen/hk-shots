:root {
  --background-color: #242424;
  --overlay-background-color: rgba(0, 0, 0, 0.5);
  --text-color: rgba(255, 255, 255, 0.87);
  font-family: Inter, system-ui, Avenir, Helvetica, Arial, sans-serif;
  line-height: 1.5;
  font-weight: 400;

  color-scheme: light dark;
  color: var(--text-color);
  background-color: var(--background-color);

  font-synthesis: none;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

@media (prefers-color-scheme: light) {
  :root {
    --text-color: #213547;
    --background-color: #ffffff;
    --overlay-background-color: rgba(255, 255, 255, 0.5);
  }
}

@keyframes fade-in {
  from { opacity: 0; }
}

@keyframes fade-out {
  to { opacity: 0; }
}

@keyframes slide-from-right {
  from { transform: translateX(30px); }
}

@keyframes slide-to-left {
  to { transform: translateX(-30px); }
}

@keyframes slide-from-left {
  from { transform: translateX(-30px); }
}

@keyframes slide-to-right {
  to { transform: translateX(30px); }
}

body {
  margin: 0;
}

body:has(dialog[open]) {
  /* Scrollbar will disappear, add padding to account for it */
  padding-right: 15px;
}

main {
  /* 
    Start with the main content initially. main.ts will show it 
    when the page is ready. (This is to avoid a flash of content
    if the page loads into a full screen view of a photo)
  */
  visibility: hidden;
}

/* 
  Hide the body when dialog is open to avoid page below fading in 
  when animating between photos
*/
body:has(dialog[open]) main {
  display: none;
}

h1 {
  margin: 0;
  font-size: 3.2em;
  line-height: 1;
}

.page-title {
  text-align: center;
  padding-top: 0.5em;
  padding-bottom: 0.5em;
}

.photo-grid {
  list-style-type: none;
  margin: 0;
  padding: 0;
  display: grid;
  grid-template-columns: 1fr 1fr 1fr;
  gap: 1em;
}

.photo-grid li {
  /* 
    Use padding to maintain 1.78 aspect ratio while the container 
    width changes.
  */
  padding-top: 56.25%;
  width: 100%;
  position: relative;
}

.photo-grid img {
  position: absolute;
  inset: 0;
  width: 100%;
  height: 100%;
  object-fit: cover;
  transition: transform 0.2s ease-in;
}

.photo-grid img:hover {
  transform: scale(1.02);
  transition-timing-function: ease-out;
}

#expanded-photo-container {
  outline: none;
  position: absolute;
  margin: 0;
  padding: 0;
  border: none;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  max-width: unset;
  max-height: unset;
  background: var(--background-color);
  display: none;
  place-content: center;
  overflow: hidden;
  cursor: pointer;
}

#expanded-photo-container[open] {
  display: grid;
}

#expanded-photo-container img {
  object-fit: contain;
  /* 
    Make the image a block element to remove the weird 
    margin at the bottom 
  */
  display: block;
}

#expanded-photo-container img.horizontal {
  width: 100vw;
  height: auto;
}

#expanded-photo-container img.vertical {
  height: 100vh;
  width: auto;
}

#expanded-photo-container figcaption {
  padding: 0.5em;
  position: absolute;
  bottom: 0;
  right: 0;
  border-top-left-radius: 4px;
  /* background: rgba(0, 0, 0, 0.5); */
  background: var(--overlay-background-color);
  /* 
    Give the caption its own transition name so that it appears
    above the image during the transition
   */
  view-transition-name: figcaption;
}

html:active-view-transition-type(expand),
html:active-view-transition-type(shrink) {
  #expanded-photo-container img {
    view-transition-name: photo;
  }

  &::view-transition-old(photo),
  &::view-transition-new(photo) {
    animation: none;
    mix-blend-mode: normal;
    height: 100%;
    overflow: clip;
  }
  
  &::view-transition-image-pair(photo) {
    isolation: none;
  }
}

html:active-view-transition-type(expand) {
/* The old view is the thumbnail */
  &::view-transition-old(photo) {
    /* Maintain the aspect ratio of the view,
    by shrinking it to fit within the bounds of the element */
    object-fit: contain;
  }
  
  /* The new view is the full image */
  &::view-transition-new(photo) {
    /* Maintain the aspect ratio of the view,
    by growing it to cover the bounds of the element */
    object-fit: cover;
  }
}

html:active-view-transition-type(shrink) {
/* The old view is the full image */
  &::view-transition-old(photo) {
    /* Maintain the aspect ratio of the view,
    by growing it to cover the bounds of the element */
    object-fit: cover;
  }
  
  /* The new view is the thumbnail */
  &::view-transition-new(photo) {
    /* Maintain the aspect ratio of the view,
    by shrinking it to fit within the bounds of the element */
    object-fit: contain;
  }
}

html:active-view-transition-type(forward),
html:active-view-transition-type(backward) {
  #expanded-photo-container {
    view-transition-name: photo-container;
  }
}

html:active-view-transition-type(forward) {
  &::view-transition-old(photo-container) {
    animation: 
      90ms cubic-bezier(0.4, 0, 1, 1) both fade-out,
      300ms cubic-bezier(0.4, 0, 0.2, 1) both slide-to-left;
  }
  &::view-transition-new(photo-container) {
    animation: 
      210ms cubic-bezier(0, 0, 0.2, 1) 90ms both fade-in,
      300ms cubic-bezier(0.4, 0, 0.2, 1) both slide-from-right;
  }
}

html:active-view-transition-type(backward) {
  &::view-transition-old(photo-container) {
    animation: 
      90ms cubic-bezier(0.4, 0, 1, 1) both fade-out,
      300ms cubic-bezier(0.4, 0, 0.2, 1) both slide-to-right;
  }
  &::view-transition-new(photo-container) {
    animation: 
      210ms cubic-bezier(0, 0, 0.2, 1) 90ms both fade-in,
      300ms cubic-bezier(0.4, 0, 0.2, 1) both slide-from-left;
  }
}
